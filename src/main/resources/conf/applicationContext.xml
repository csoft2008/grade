<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.javaoldman.service"/>

    <context:property-placeholder location="classpath:conf/jdbc.properties"/>
    <!--    数据源对象，使用Druid连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        set注入，把数据库连接池付给dataSource属性-->
        <property name="dataSource" ref="dataSource"/>
        <!--        mybatis主配置文件的位置
            configLocation属性是Resource类型，读取配置文件
            它的赋值，使用value，指定文件的路径，使用classpath:表示文件位置
-->
        <property name="configLocation" value="classpath:conf/mybatis.xml"/>
    </bean>
    <!--    获得Dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        指定SqlSessionFactory对象的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--        指定包名，包名是dao接口所在的包名。
            一次getMapper()方法，得到每个接口的dao对象
            创建好的dao对象放入到spring的容器中。dao对象的默认名称是接口名首写字母小写
-->
        <property name="basePackage" value="com.javaoldman.dao"/>
    </bean>

<!--    <aop:aspectj-autoproxy/>-->
</beans>